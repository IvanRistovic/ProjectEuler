/*
	Problem 45

	Triangle, pentagonal, and hexagonal numbers are generated by the following
	formulae:

	Triangle	 Tn = n(n+1)/2  	1, 3, 6, 10, 15, ...
	Pentagonal	 Pn = n(3n−1)/2 	1, 5, 12, 22, 35, ...
	Hexagonal	 Hn = n(2n−1) 		1, 6, 15, 28, 45, ...
	It can be verified that T285 = P165 = H143 = 40755.

	Find the next triangle number that is also pentagonal and hexagonal.
*/

/*
	Every hexagonal number is also a triangle number, therefore loop all
	hexagonal numbers and check if they are pentagonal.
*/

#include <iostream>
#include <cmath>
#include "../timer.h"

bool is_pentagonal(unsigned long number);


int main()
{
	ProgramTimer timer;

	unsigned long i = 6, step = 9;
	while (i <= 40755 || !is_pentagonal(i)) {
		i += step;
		step += 4;
	}

	std::cout << i << '\n';

	timer.print_time();
	return 0;
}

bool is_pentagonal(unsigned long number)
{
	double t = (std::sqrt(1 + 24 * number) + 1.0) / 6.0;
	return t == ((int)t);
}

/*
	Solution:	1533776805
	Avg time:	0.00134738s
*/
